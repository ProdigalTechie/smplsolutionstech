@using SmplSolutionsTech.Models.App
@using SmplSolutionsTech.Helpers.Classes
@using SmplSolutionsTech.Helpers.Enums
@model OpenCodeGeneratorForm
@{
    ViewData["Title"] = "Open Generator";
    var languages = EnumHelper.GetSelectList(typeof(OpenGeneratorLanguagesEnum));
    var csharpDataTypes = EnumHelper.GetSelectList(typeof(CSharpDataTypesEnum));
    var sqlDataTypes = EnumHelper.GetSelectList(typeof(SqlDataTypesEnum));
    var propertyModifiers = EnumHelper.GetSelectList(typeof(AccessModifierEnum));
}
<script>
    //https://www.w3schools.com/jquery/event_ready.asp
    $(document).ready(function(){
        // global variable to track property items
        counter = 0;
        languageId = 0; // default to C#
        $("#sqlTypeId").hide();
        $("#cSharpTypeId").show();
    });
    
    function addRow() {
        $("#language")[0].disabled = true;
        var cSharp = JSON.parse('@Html.Raw(Json.Serialize(csharpDataTypes.OrderBy(x => x.Value)))');
        var sql = JSON.parse('@Html.Raw(Json.Serialize(sqlDataTypes.OrderBy(x => x.Value)))');
        var propertyAccess = JSON.parse('@Html.Raw(Json.Serialize(propertyModifiers.OrderBy(x => x.Value)))');
        var table = document.getElementById("addPropertiesTable");
        var row = table.insertRow(-1);
        var accessSelectList = languageId === 0 ? row.insertCell(0) : null;
        if(accessSelectList !== null) {
            var accessOptions = "";
            for (var i = 0; i < propertyAccess.length; i++) {
                if (i === 0) {
                    accessOptions += '<option value="' + Number(propertyAccess[i].value) + '" selected >' + propertyAccess[i].text + '</option>';
                } else {
                    accessOptions += '<option value="' + Number(propertyAccess[i].value) + '" >' + propertyAccess[i].text + '</option>';
                }
            }
            accessSelectList.innerHTML = '<select asp-for="Properties[' + counter + '].DomainAccess" class="form-select">'
            +
                accessOptions
            + '</select>';
        }
        var dataTypeSelectList = languageId === 0 ? row.insertCell(1) : row.insertCell(0);
        var dataTypeOptions = "";
        if(languageId === 0) {
            //https://stackoverflow.com/questions/18470702/how-do-i-convert-a-c-sharp-liststring-to-a-javascript-array
            //https://stackoverflow.com/questions/50056518/ijsonhelper-does-not-contain-a-definition-for-encode
            //https://stackoverflow.com/questions/66031714/form-for-a-model-that-contains-a-list-property-in-asp-net-core-3-mvc
            for (var i = 0; i < cSharp.length; i++) {
                if (i === 0) {
                    dataTypeOptions += '<option value="' + Number(cSharp[i].value) + '" selected >' + cSharp[i].text + '</option>';
                } else {
                    dataTypeOptions += '<option value="' + Number(cSharp[i].value) + '" >' + cSharp[i].text + '</option>';
                }
            }

            dataTypeSelectList.innerHTML = '<select asp-for="Properties[' + counter + '].CSharpDataTypeId" class="form-select">'
            +
                dataTypeOptions
            + '</select>';
        } else if (languageId === 1) {
            for (var i = 0; i < sql.length; i++) {
                if (i === 0) {
                    dataTypeOptions += '<option value="' + Number(sql[i].value) + '" selected >' + sql[i].text + '</option>';
                } else {
                    dataTypeOptions += '<option value="' + Number(sql[i].value) + '" >' + sql[i].text + '</option>';
                }
            }

            dataTypeSelectList.innerHTML = '<select asp-for="Properties[' + counter + '].SqlDataTypeId" class="form-select">'
                +
                dataTypeOptions
                + '</select>';
        }
        
        var nameField = languageId === 0 ? row.insertCell(2) : row.insertCell(1);
        nameField.innerHTML = '<input asp-for="Properties[' + counter + '].Name" class="form-control" autocomplete="modelname" aria-required="true" />';
        
        // TODO add Nullable switch
        var nullField = languageId === 0 ? row.insertCell(3) : row.insertCell(2);
        nullField.innerHTML = '<input asp-for="Properties[' + counter + '].IsNullable" class="form-check-input float-left null-checkbox" type="checkbox" role="switch">';

        counter++;
    }
    function toggleLanguage() {
        //https://stackoverflow.com/questions/10659097/jquery-get-selected-option-from-dropdown
        var language = $("#language").find(":selected").val();
        languageId = Number(language);
        // todo disable inherits and interface options if sql selected
        if (languageId === 1) { // sql
            $("#inherits")[0].disabled = true;
            $("#isInterfaceSwitch")[0].disabled = true;
            $("#cSharpTypeId").hide();
            $("#domainAccess").hide();
            $("#sqlTypeId").show();
        } else { // c#
            $("#inherits")[0].disabled = false;
            $("#isInterfaceSwitch")[0].disabled = false;
            $("#sqlTypeId").hide();
            $("#cSharpTypeId").show();
            $("#domainAccess").show();

        }
    }
</script>

@using (Html.BeginForm("OpenGeneratorCreate", "ModelGenerator", FormMethod.Post))
{
    <div class="container">
        <div class="row">
            <div class="col">
                <div class="mb-3">
                    <label asp-for="Language" class="form-label font-weight-bold"></label>
                    <select id="language" asp-for="Language" class="form-select" onchange="toggleLanguage()">
                        @foreach (var language in languages)
                        {
                            <option value="@language.Value">@language.Text</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col">
                <div class="mb-3">
                    <label asp-for="ModelName" class="form-label font-weight-bold"></label>
                    <input asp-for="ModelName" class="form-control" autocomplete="modelname" aria-required="true" />
                    <span asp-validation-for="ModelName" class="text-danger"></span>
                </div>
            </div>
            <div class="col">
                <div class="mb-3">
                    <label asp-for="InheritsFrom" class="form-label font-weight-bold"></label>
                    <input id="inherits" asp-for="InheritsFrom" class="form-control" autocomplete="inheritsfrom" aria-required="true" />
                </div>
            </div>
            <div class="col">
                <div class="form-check form-switch">
                    <label asp-for="IsInterface" class="form-check-label font-weight-bold" for="isInterfaceSwitch"></label>
                    <br />
                    <div class="large-switch">
                        <input asp-for="IsInterface" class="form-check-input" type="checkbox" role="switch" id="isInterfaceSwitch">
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="mb-3">
                    <table class="mx-lg-3" id="addPropertiesTable" align="center">
                        <thead>
                            <tr>
                                <td colspan="4">
                                    <button onclick="addRow()" type="button" class="btn btn-outline-primary">Add Property</button>
                                </td>
                            </tr>
                        </thead>
                        <tbody>
                        <tr>
                            <th class="mx-2 width-20vw">
                                <label id="domainAccess" asp-for="Properties[0].DomainAccess" class="form-label mx-2"></label>
                            </th>
                            <th id="cSharpTypeId" class="mx-2 width-20vw">
                                <label asp-for="Properties[0].CSharpDataTypeId" class="form-label mx-2"></label>
                            </th>
                            <th id="sqlTypeId" class="mx-2 width-20vw">
                                <label asp-for="Properties[0].SqlDataTypeId" class="form-label mx-2"></label>
                            </th>

                            @*<th class="mx-2 width-20vw">
                                <label asp-for="Properties[0].DataTypeName" class="form-label mx-2"></label>
                            </th>*@
                            <th class="mx-2 width-20vw">
                                <label asp-for="Properties[0].Name" class="form-label mx-2"></label>
                            </th >
                            <th class="mx-2 width-20vw">
                                <label asp-for="Properties[0].IsNullable" class="form-label mx-2"></label>
                            </th>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        </div>
        <div class="row">
            <div class="col">&nbsp;</div>
            <div class="col">&nbsp;</div>
            <div class="col">&nbsp;</div>
            <div class="col">
                <button class="btn btn-primary" type="submit" onclick="">Submit</button>
            </div>
        </div>
}